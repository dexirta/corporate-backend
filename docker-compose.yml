version: '3'
services:
  strapi:
    container_name: strapi
    build: .
    image: strapi:latest
    restart: unless-stopped
    env_file: .env
    environment:
      HOST: ${HOST}
      PORT: ${PORT}
      APP_KEYS: ${APP_KEYS}
      API_TOKEN_SALT: ${API_TOKEN_SALT}
      ADMIN_JWT_SECRET: ${ADMIN_JWT_SECRET}
      TRANSFER_TOKEN_SALT: ${TRANSFER_TOKEN_SALT}
      JWT_SECRET: ${JWT_SECRET}
      SITE_URL: ${SITE_URL}
      NODE_ENV: ${NODE_ENV}

      DATABASE_CLIENT: ${DATABASE_CLIENT}
      DATABASE_FILENAME: ${DATABASE_FILENAME}
      DATABASE_HOST: ${DATABASE_HOST}
      DATABASE_NAME: ${DATABASE_NAME}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      DATABASE_PORT: ${DATABASE_PORT}
      DATABASE_USERNAME: ${DATABASE_USERNAME}
      DATABASE_SSL: ${DATABASE_SSL}

      STORAGE_ACCOUNT: ${STORAGE_ACCOUNT}
      STORAGE_ACCOUNT_KEY: ${STORAGE_ACCOUNT_KEY}
      STORAGE_CONTAINER_NAME: ${STORAGE_CONTAINER_NAME}
      STORAGE_CDN_URL: ${STORAGE_CDN_URL}
      STORAGE_ASSETS_FOLDER: ${STORAGE_ASSETS_FOLDER}

    volumes:
      - ./config:/opt/app/config
      - ./src:/opt/app/src
      - ./package.json:/opt/package.json
      - ./package-lock.json:/opt/package-lock.json
      - ./.env:/opt/app/.env
      - ./public/uploads:/opt/app/public/uploads
    ports:
      - '1337:1337'
    networks:
      - strapi
    depends_on:
      - strapiDB

  strapiDB:
    image: mysql:latest
    command: --default-authentication-plugin=mysql_native_password
    platform: linux/amd64 #for platform error on Apple M1 chips
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${DATABASE_PASSWORD}
      MYSQL_DATABASE: ${DATABASE_NAME}
      MYSQL_USER: ${DATABASE_USERNAME}
      MYSQL_PASSWORD: ${DATABASE_PASSWORD}
    ports:
      - '3306:3306'
    volumes:
      - ./data:/var/lib/mysql # if you want to use a bind folder
    networks:
      - strapi

  strapiAdminer:
    container_name: strapiAdminer
    image: adminer
    restart: unless-stopped
    ports:
      - '9090:8080'
    environment:
      - ADMINER_DEFAULT_SERVER=strapiDB
    networks:
      - strapi
    depends_on:
      - strapiDB

volumes:
  strapi-data:

networks:
  strapi:
    name: strapi
    driver: bridge
